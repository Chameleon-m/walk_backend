# https://github.com/influxdata/telegraf/blob/master/etc/telegraf.conf


# [global_tags]
#   app_version = "${APP_VERSION}"

[agent]
hostname = "telegraf-docker"

# [[inputs.cpu]]
#   percpu = false
#   totalcpu = true
#   fieldpass = [ "usage*" ]

# [[inputs.disk]]
#   fielddrop = [ "inodes*" ]
#   mount_points=["/"]

# [[inputs.net]]
#   interfaces = [ "eth0" ]
#   fielddrop = [ "icmp*", "ip*", "tcp*", "udp*" ]

# [[inputs.mem]]

# [[inputs.swap]]

# [[inputs.system]]

[[inputs.docker]]
  ## Docker Endpoint
  ##   To use TCP, set endpoint = "tcp://[ip]:[port]"
  ##   To use environment variables (ie, docker-machine), set endpoint = "ENV"
  ## Exposing daemon on TCP tcp://localhost:2375 without TLS helps legacy clients connect to the daemon.
  ## It also makes yourself vulnerable to remote code execution attacks. Use with caution.
  endpoint = "unix:///var/run/docker.sock"
  container_name_include = []
  perdevice = false
  perdevice_include = ["cpu", "blkio", "network"]
  total = false
  total_include = ["cpu", "blkio", "network"]
  tag_env = ["APP_VERSION"]

# https://github.com/influxdata/telegraf/blob/master/etc/telegraf.conf#L4328
# [[inputs.elasticsearch]]

# https://github.com/influxdata/telegraf/blob/master/etc/telegraf.conf#L4393
# # Derive metrics from aggregating Elasticsearch query results
# [[inputs.elasticsearch_query]]

# https://github.com/influxdata/telegraf/blob/master/etc/telegraf.conf#L6242
# # Read Nginx's basic status information (ngx_http_stub_status_module)
# [[inputs.nginx]]

# https://github.com/influxdata/telegraf/blob/master/etc/telegraf.conf#L6930
# # Reads metrics from RabbitMQ servers via the Management Plugin
# [[inputs.rabbitmq]]

# https://github.com/influxdata/telegraf/blob/master/etc/telegraf.conf#L7670
# # A plugin to collect stats from Varnish HTTP Cache
# [[inputs.varnish]]

# https://github.com/influxdata/telegraf/blob/master/etc/telegraf.conf#L9261
# # Read metrics from one or many MongoDB servers
# [[inputs.mongodb]]

# https://github.com/influxdata/telegraf/blob/master/etc/telegraf.conf#L9863
# # Read metrics from one or many redis servers
# [[inputs.redis]]




[[outputs.prometheus_client]]
  listen = "telegraf:9100"
  path = "/metrics"



# # Configurable HTTP health check resource based on metrics
# [[outputs.health]]
#   ## Address and port to listen on.
#   ##   ex: service_address = "http://localhost:8080"
#   ##       service_address = "unix:///var/run/telegraf-health.sock"
#   # service_address = "http://:8080"
#
#   ## The maximum duration for reading the entire request.
#   # read_timeout = "5s"
#   ## The maximum duration for writing the entire response.
#   # write_timeout = "5s"
#
#   ## Username and password to accept for HTTP basic authentication.
#   # basic_username = "user1"
#   # basic_password = "secret"
#
#   ## Allowed CA certificates for client certificates.
#   # tls_allowed_cacerts = ["/etc/telegraf/clientca.pem"]
#
#   ## TLS server certificate and private key.
#   # tls_cert = "/etc/telegraf/cert.pem"
#   # tls_key = "/etc/telegraf/key.pem"
#
#   ## One or more check sub-tables should be defined, it is also recommended to
#   ## use metric filtering to limit the metrics that flow into this output.
#   ##
#   ## When using the default buffer sizes, this example will fail when the
#   ## metric buffer is half full.
#   ##
#   ## namepass = ["internal_write"]
#   ## tagpass = { output = ["influxdb"] }
#   ##
#   ## [[outputs.health.compares]]
#   ##   field = "buffer_size"
#   ##   lt = 5000.0
#   ##
#   ## [[outputs.health.contains]]
#   ##   field = "buffer_size"