version: '3.9'

services:

  # NGINX в frontend репозитории
  # nginx:
  #   extends:
  #     file: ./deployments/docker/common.yml
  #     service: nginx
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   volumes:
  #     - ./deployments/docker/nginx/templates/api.conf.template:/etc/nginx/templates/api.conf.template
  #     - ./deployments/docker/nginx/templates/api-upstream.conf.template:/etc/nginx/templates/api-upstream.conf.template:ro
  #     - nginxLogs:/var/log/nginx
  #   environment:
  #     API_SCHEMA: ${API_SCHEMA}
  #     API_HOST: host.docker.internal
  #     API_PORT: ${API_PORT}
  #     SITE_SCHEMA: ${SITE_SCHEMA}
  #     SITE_HOST: ${SITE_HOST}
  #     SITE_PORT: ${SITE_PORT}

  rabbitmq:
    extends:
      file: ./deployments/docker/common.yml
      service: rabbitmq
    volumes:
      - rabbitmqLogs:/var/log/rabbitmq

  mongo-replica-setup:
    extends:
      file: ./deployments/docker/common.yml
      service: mongo-replica-setup
    depends_on:
      mongo1:
        condition: service_healthy

  mongo1:
    extends:
      file: ./deployments/docker/common.yml
      service: mongo1
    volumes:
      - mongoLogs:/var/log/mongodb

  redis:
    extends:
      file: ./deployments/docker/common.yml
      service: redis
    environment:
      APP_VERSION: ${APP_VERSION}

  prometheus:
    extends:
      file: ./deployments/docker/common.yml
      service: prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./deployments/docker/prometheus/api.yml:/etc/prometheus/prometheus.yml:ro
    environment:
      APP_VERSION: ${APP_VERSION}
      API_SCHEMA: ${API_SCHEMA}
      API_HOST: ${API_HOST}
      API_PORT: ${API_PORT}

  # telegraf:
  #   extends:
  #     file: ./deployments/docker/common.yml
  #     service: telegraf
  #   environment:
  #     APP_VERSION: ${APP_VERSION}
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock # Linux
  #     - //var/run/docker.sock:/var/run/docker.sock # Windows WSL 2 engine

  grafana:
    extends:
      file: ./deployments/docker/common.yml
      service: grafana
    volumes:
      - grafanaLogs:/var/log/grafana
    environment:
      APP_VERSION: ${APP_VERSION}

volumes:
  mongoData:
  mongoLogs:
  mongoConfig:
  rabbitmqData:
  rabbitmqLogs:
  grafanaData:
  grafanaLogs:
  redisData:
  redisLogs:
  prometheusData:
  nginxLogs:
    name: nginxLogs

networks:
  netApplication:
    name: netApplication
  netNginx:
    name: netNginx
